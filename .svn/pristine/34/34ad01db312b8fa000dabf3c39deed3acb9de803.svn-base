package ar.com.finit.dto.model.factory;

import java.lang.reflect.Type;
import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;

import ar.com.finit.dto.factory.AbstractDTOFactory;
import ar.com.finit.dto.model.page.ImageCollectionPage;

import com.google.gson.reflect.TypeToken;

/**
 * @author leo
 */
public class ImageCollectionPageFactory extends AbstractDTOFactory<ImageCollectionPage> {
	@Autowired
	private ImageDTOFactory imageDTOFactory;
	
	@Override
	public ImageCollectionPage makeDTO(String json) {
		ImageCollectionPage page = super.makeDTO(json);

		String[] pair = json.split("\"pageElements\":");
		String imagesJson = pair[1].substring(0, pair[1].length() - 1);
		
		if (imagesJson.substring(0, 1).equals("[")){
			page.setPageElements(imageDTOFactory.makeDTOs(imagesJson));
		}else{
			page.addPageElement(imageDTOFactory.makeDTO(imagesJson));
		}
		
		return page;
	}
	
	@Override
	protected Type getEntityType() {
		return new TypeToken<ImageCollectionPage>(){}.getType();
	}

	@Override
	protected Type getCollectionType() {
		return new TypeToken<Collection<ImageCollectionPage>>(){}.getType();
	}
//	
//	public void setImageDTOFactory(ImageDTOFactory imageDTOFactory) {
//		this.imageDTOFactory = imageDTOFactory;
//	}
}